// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using tasinmaz.API.Data;

namespace tasinmaz.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221207180257_TasinmazMigration")]
    partial class TasinmazMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("tasinmaz.API.Models.Il", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Adi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Iller");
                });

            modelBuilder.Entity("tasinmaz.API.Models.Ilce", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Adi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ilceler");
                });

            modelBuilder.Entity("tasinmaz.API.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<bool>("AdminMi")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Soyad")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("tasinmaz.API.Models.LogKaydi", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("Durum")
                        .HasColumnType("text");

                    b.Property<string>("IslemTipi")
                        .HasColumnType("text");

                    b.Property<string>("KullaniciIp")
                        .HasColumnType("text");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("LogKayitlari");
                });

            modelBuilder.Entity("tasinmaz.API.Models.Mahalle", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Adi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Mahalleler");
                });

            modelBuilder.Entity("tasinmaz.API.Models.Tasinmaz", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Ada")
                        .HasColumnType("text");

                    b.Property<string>("IlAdi")
                        .HasColumnType("text");

                    b.Property<string>("IlceAdi")
                        .HasColumnType("text");

                    b.Property<string>("KoordinatBilgileri")
                        .HasColumnType("text");

                    b.Property<string>("MahalleAdi")
                        .HasColumnType("text");

                    b.Property<string>("Nitelik")
                        .HasColumnType("text");

                    b.Property<string>("Parsel")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tasinmazlar");
                });

            modelBuilder.Entity("tasinmaz.API.Models.Ilce", b =>
                {
                    b.HasOne("tasinmaz.API.Models.Il", "Il")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Il");
                });

            modelBuilder.Entity("tasinmaz.API.Models.LogKaydi", b =>
                {
                    b.HasOne("tasinmaz.API.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("tasinmaz.API.Models.Mahalle", b =>
                {
                    b.HasOne("tasinmaz.API.Models.Ilce", "Ilce")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ilce");
                });

            modelBuilder.Entity("tasinmaz.API.Models.Tasinmaz", b =>
                {
                    b.HasOne("tasinmaz.API.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });
#pragma warning restore 612, 618
        }
    }
}
